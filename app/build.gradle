apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao'
//apply plugin: 'mtj-circle-plugin'
apply plugin: 'android-aspectjx'

apply from: rootProject.file('gradles/config.gradle')
apply from: rootProject.file('gradles/common.gradle')

android {

    defaultConfig {
        applicationId "com.omottec.demoapp"
        versionCode 3
        versionName "3.0"
        multiDexEnabled true
        ndk {
            moduleName "jni-test"
        }
    }

    signingConfigs {
        release {
            storeFile file("./key/demoapp.jks")
            storePassword "demoapp007"
            keyAlias "demoapp_key"
            keyPassword "demoapp007"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

//    MtjCirclePluginConfig {
//        // 设置appkey
//        appkey = '1478516c5a'
//        // 设置debug 开关，如果需要查看日志则打开开关，为避免影响性能建议上线前关闭（设置为false）
//        debug = false
//        // 默认启动此插件，如果开发者不需要可以禁用（设置为false）
//        enabled = true
//    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "env", "region"

    productFlavors {
        development {
            dimension "env"
            applicationIdSuffix ".debug"
        }

        production {
            dimension "env"
        }

        china {
            dimension "region"
            applicationId "com.omottec.demoapp.cn"
            ndk {
                abiFilters 'armeabi-v7a'
//                abiFilters 'arm64-v8a'
//                abiFilters 'armeabi-v7a','arm64-v8a'
            }
        }

        us {
            dimension "region"
            applicationId "com.omottec.demoapp.us"
            ndk {
                abiFilters "arm64-v8a"
            }
        }
    }

    applicationVariants.all {variant ->
        variant.outputs.each { output ->
            def lintTask = tasks["lint${variant.name.capitalize()}"]
            println(">>>output:" + output + ", variant:" + variant)
            println(">>>variant.name:" + variant.name)
//            output.assembleProvider.dependsOn lintTask
            println(">>>output.versionName:" + output.versionCode + ", output.versionCode:" + output.versionCode)
        }
    }

    variantFilter { variant ->
        println(">>>" + variant.name)
        println(">>>" + variant.flavors.name)
        println(">>>" + variant.buildType.name)
    }
}

aspectjx {
    include 'com.omottec.demoapp.aspectj'
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation project(':PullToRefresh')
    implementation project(':service')
    implementation project(':account')
    implementation project(':lib_a')

//    implementation project(':logger')
    implementation "com.github.omottec:logger:0.0.8"

    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

//    implementation 'com.mcxiaoke.volley:library:1.0.18'
//    implementation 'com.android.volley:volley:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'

    implementation 'com.facebook.fresco:fresco:1.2.0'
    implementation 'com.facebook.fresco:imagepipeline-okhttp:0.5.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'

    implementation 'io.reactivex:rxjava:1.2.9'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.trello:rxlifecycle:0.3.1'
    implementation 'com.trello:rxlifecycle-components:0.3.1'
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.1.0'
//    implementation 'com.trello:rxlifecycle:1.0'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.1.0'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'

    implementation 'org.greenrobot:greendao:3.3.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

//    implementation 'com.appsee:appsee-android:+'

    implementation project(':apt_api')
    annotationProcessor project(':apt_processor')

//    annotationProcessor "com.google.auto.service:auto-service:1.0-rc4"

    implementation 'me.weishu:epic:0.11.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'org.aspectj:aspectjrt:1.9.5'

    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute module('com.github.omottec:logger') with project(':logger')
            all { DependencySubstitution substitution ->
                println(">>>substitution.requested:" + substitution.requested.toString())
//                if (substitution.requested.toString().contains("com.github.omottec:logger"))
//                    substitution.useTarget project(':logger')
            }
        }

        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            println(">>>ModuleVersionSelector")
            println(details.requested.module.toString())
            println(details.requested.group
                + ":" + details.requested.name
                + ":" + details.requested.version)
        }
    }
}
